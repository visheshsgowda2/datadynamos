version: '3.8'

services:
  # Database Services
  postgres:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_DB: smart_campus
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - smart-campus

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - smart-campus

  # Message Broker
  mqtt:
    image: eclipse-mosquitto:2
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./infra/mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - smart-campus

  # Core Services
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/smart_campus
      REDIS_URL: redis://redis:6379
      MQTT_BROKER_URL: mqtt://mqtt:1883
      JWT_SECRET: your-jwt-secret-key
      GENAI_PROVIDER: openai
      GENAI_API_KEY: ${GENAI_API_KEY:-}
    depends_on:
      - postgres
      - redis
      - mqtt
    networks:
      - smart-campus

  ml:
    build:
      context: ./apps/ml
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/smart_campus
      REDIS_URL: redis://redis:6379
      GENAI_API_KEY: ${GENAI_API_KEY:-}
    depends_on:
      - postgres
      - redis
    networks:
      - smart-campus

  iot-sim:
    build:
      context: ./apps/iot-sim
      dockerfile: Dockerfile
    environment:
      MQTT_BROKER_URL: mqtt://mqtt:1883
      API_BASE_URL: http://api:8000
    depends_on:
      - mqtt
      - api
    networks:
      - smart-campus

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_WS_URL: ws://localhost:8000
    depends_on:
      - api
    networks:
      - smart-campus

  # Monitoring
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./infra/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - smart-campus

volumes:
  postgres_data:
  grafana_data:

networks:
  smart-campus:
    driver: bridge
